//2 linked list with unequal length and they merge at single shared intersection node.Function to return intersection node or null
//l1 = 2->3->1->4
//l2 = 8->7->9->1->4

//O(n+m) time 
//O(1) space

import java.util.*;

class Program {
  // This is an input class. Do not edit.
  public static class LinkedList {
    public int value;
    public LinkedList next;

    public LinkedList(int value) {
      this.value = value;
      this.next = null;
    }
  }

  public LinkedList mergingLinkedLists(LinkedList linkedListOne, LinkedList linkedListTwo) {
    // Write your code here.
    LinkedList  nodeOne = linkedListOne;
    LinkedList nodeTwo = linkedListTwo;
    while(nodeOne != nodeTwo){
      if(nodeOne == null)
        nodeOne = linkedListTwo;
      else
        nodeOne = nodeOne.next;
      if(nodeTwo == null)
        nodeTwo = linkedListOne;
      else
        nodeTwo = nodeTwo.next;
      
    }
    return nodeOne;
  }
}
