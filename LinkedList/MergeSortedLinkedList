//2 sll with sorted integers
//i/p = l1 =2->6->7->8  l2 = 1->3->4->5->9->10
//o/p = 1->2->3->4->5->6->7->8->9->10

//Time complexity = O(m+n)
//space complexity = O(m+n)

import java.util.*;

class Program {
  // This is an input class. Do not edit.
  public static class LinkedList {
    int value;
    LinkedList next;

    LinkedList(int value) {
      this.value = value;
      this.next = null;
    }
  }

  public static LinkedList mergeLinkedLists(LinkedList headOne, LinkedList headTwo) {
    // Write your code here.
    LinkedList nodeOne = headOne;
    LinkedList nodeTwo = headTwo;
    LinkedList prevNode = null;
    while(nodeOne != null && nodeTwo != null){
      if(nodeOne.value < nodeTwo.value){
       prevNode = nodeOne;
        nodeOne = nodeOne.next;
      }
      else{
        if(prevNode != null){
          prevNode.next = nodeTwo;
        }
        prevNode = nodeTwo;
        nodeTwo = nodeTwo.next;
        prevNode.next = nodeOne;
        
      }
        
      }
    if(nodeOne == null){
      prevNode.next = nodeTwo;
    }
    
    return headOne.value < headTwo.value ? headOne : headTwo;
  }
}
